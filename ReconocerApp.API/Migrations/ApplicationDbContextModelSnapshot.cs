// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReconocerApp.API.Data;

#nullable disable

namespace ReconocerApp.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("ReconocerApp.API.Models.Colaborador", b =>
                {
                    b.Property<string>("ColaboradorId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ExcepcionConfiguracion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrganizacionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ColaboradorId");

                    b.HasIndex("OrganizacionId");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Comportamiento", b =>
                {
                    b.Property<int>("ComportamientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizacionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WalletOtorgados")
                        .HasColumnType("INTEGER");

                    b.HasKey("ComportamientoId");

                    b.HasIndex("OrganizacionId");

                    b.ToTable("Comportamientos");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.InventarioTransaccion", b =>
                {
                    b.Property<int>("TransaccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PremioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TransaccionId");

                    b.HasIndex("PremioId");

                    b.ToTable("InventarioTransacciones");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.MarketplaceCompra", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ColaboradorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ComentarioRevision")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaCompra")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaResolucion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PremioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CompraId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("PremioId");

                    b.ToTable("MarketplaceCompras");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.MarketplacePremio", b =>
                {
                    b.Property<int>("PremioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadActual")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CostoWallet")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizacionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UltimaActualizacion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PremioId");

                    b.HasIndex("OrganizacionId");

                    b.ToTable("MarketplacePremios");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Organizacion", b =>
                {
                    b.Property<int>("OrganizacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DominioEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OrganizacionId");

                    b.ToTable("Organizaciones");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Reconocimiento", b =>
                {
                    b.Property<int>("ReconocimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ColaboradorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ComentarioRevision")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaCreacion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaResolucion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Justificacion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ReconocimientoId");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("Reconocimientos");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.ReconocimientoComportamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComportamientoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReconocimientoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ComportamientoId");

                    b.HasIndex("ReconocimientoId");

                    b.ToTable("ReconocimientoComportamientos");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.WalletCategoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoriaId");

                    b.ToTable("WalletCategorias");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.WalletSaldo", b =>
                {
                    b.Property<int>("WalletSaldoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ColaboradorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SaldoActual")
                        .HasColumnType("INTEGER");

                    b.HasKey("WalletSaldoId");

                    b.HasIndex("ColaboradorId")
                        .IsUnique();

                    b.ToTable("WalletSaldos");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.WalletTransaccion", b =>
                {
                    b.Property<int>("TransaccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ColaboradorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("WalletSaldoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TransaccionId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("WalletSaldoId");

                    b.ToTable("WalletTransacciones");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Colaborador", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.Organizacion", "Organizacion")
                        .WithMany("Colaboradores")
                        .HasForeignKey("OrganizacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Comportamiento", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.Organizacion", "Organizacion")
                        .WithMany("Comportamientos")
                        .HasForeignKey("OrganizacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.InventarioTransaccion", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.MarketplacePremio", "Premio")
                        .WithMany("InventarioTransacciones")
                        .HasForeignKey("PremioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Premio");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.MarketplaceCompra", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.Colaborador", "Colaborador")
                        .WithMany("Compras")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReconocerApp.API.Models.MarketplacePremio", "Premio")
                        .WithMany("Compras")
                        .HasForeignKey("PremioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Premio");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.MarketplacePremio", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.Organizacion", "Organizacion")
                        .WithMany("Premios")
                        .HasForeignKey("OrganizacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Reconocimiento", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.Colaborador", "Colaborador")
                        .WithMany("Reconocimientos")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.ReconocimientoComportamiento", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.Comportamiento", "Comportamiento")
                        .WithMany("ReconocimientoComportamientos")
                        .HasForeignKey("ComportamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReconocerApp.API.Models.Reconocimiento", "Reconocimiento")
                        .WithMany("ReconocimientoComportamientos")
                        .HasForeignKey("ReconocimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comportamiento");

                    b.Navigation("Reconocimiento");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.WalletSaldo", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.Colaborador", "Colaborador")
                        .WithOne("WalletSaldo")
                        .HasForeignKey("ReconocerApp.API.Models.WalletSaldo", "ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.WalletTransaccion", b =>
                {
                    b.HasOne("ReconocerApp.API.Models.WalletCategoria", "Categoria")
                        .WithMany("Transacciones")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReconocerApp.API.Models.Colaborador", "Colaborador")
                        .WithMany("Transacciones")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReconocerApp.API.Models.WalletSaldo", null)
                        .WithMany("Transacciones")
                        .HasForeignKey("WalletSaldoId");

                    b.Navigation("Categoria");

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Colaborador", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("Reconocimientos");

                    b.Navigation("Transacciones");

                    b.Navigation("WalletSaldo");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Comportamiento", b =>
                {
                    b.Navigation("ReconocimientoComportamientos");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.MarketplacePremio", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("InventarioTransacciones");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Organizacion", b =>
                {
                    b.Navigation("Colaboradores");

                    b.Navigation("Comportamientos");

                    b.Navigation("Premios");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.Reconocimiento", b =>
                {
                    b.Navigation("ReconocimientoComportamientos");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.WalletCategoria", b =>
                {
                    b.Navigation("Transacciones");
                });

            modelBuilder.Entity("ReconocerApp.API.Models.WalletSaldo", b =>
                {
                    b.Navigation("Transacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
